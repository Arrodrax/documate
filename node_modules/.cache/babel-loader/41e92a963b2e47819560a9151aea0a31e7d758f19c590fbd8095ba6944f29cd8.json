{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[inputText,setInputText]=useState('');const[summary,setSummary]=useState('');const[translated,setTranslated]=useState('');const[language,setLanguage]=useState('Hindi');const[loading,setLoading]=useState(false);const apiKey=process.env.REACT_APP_OPENAI_API_KEY;// Uses .env file for security\nconst handleSummarize=async()=>{setLoading(true);setSummary('');setTranslated('');try{var _data$choices,_data$choices$,_data$choices$$messag;const response=await fetch('https://api.openai.com/v1/chat/completions',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(apiKey)},body:JSON.stringify({model:'gpt-3.5-turbo',messages:[{role:'system',content:'You are a helpful document summarizer.'},{role:'user',content:\"Summarize this:\\n\".concat(inputText)}]})});const data=await response.json();const result=((_data$choices=data.choices)===null||_data$choices===void 0?void 0:(_data$choices$=_data$choices[0])===null||_data$choices$===void 0?void 0:(_data$choices$$messag=_data$choices$.message)===null||_data$choices$$messag===void 0?void 0:_data$choices$$messag.content)||'No summary returned.';setSummary(result);translateSummary(result);}catch(error){setSummary('‚ùå Error during summarizing.');}finally{setLoading(false);}};const translateSummary=async summaryText=>{try{var _data$choices2,_data$choices2$,_data$choices2$$messa;const response=await fetch('https://api.openai.com/v1/chat/completions',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(apiKey)},body:JSON.stringify({model:'gpt-3.5-turbo',messages:[{role:'system',content:'You are a translator.'},{role:'user',content:\"Translate the following into \".concat(language,\":\\n\").concat(summaryText)}]})});const data=await response.json();const translation=((_data$choices2=data.choices)===null||_data$choices2===void 0?void 0:(_data$choices2$=_data$choices2[0])===null||_data$choices2$===void 0?void 0:(_data$choices2$$messa=_data$choices2$.message)===null||_data$choices2$$messa===void 0?void 0:_data$choices2$$messa.content)||'No translation returned.';setTranslated(translation);}catch(error){setTranslated('‚ùå Error during translation.');}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',maxWidth:'800px',margin:'auto',fontFamily:'sans-serif'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCC4 DocuMate - AI Summarizer & Translator\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"10\",cols:\"80\",placeholder:\"Paste your document here...\",value:inputText,onChange:e=>setInputText(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uD83C\\uDF0D Translate summary to: \"}),/*#__PURE__*/_jsxs(\"select\",{value:language,onChange:e=>setLanguage(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Hindi\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Marathi\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Gujarati\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Bengali\"}),/*#__PURE__*/_jsx(\"option\",{children:\"French\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Spanish\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSummarize,disabled:loading||!inputText,style:{marginTop:'20px',padding:'10px 20px'},children:loading?'‚è≥ Processing...':'‚ö° Summarize & Translate'}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCC Summary (English):\"}),/*#__PURE__*/_jsx(\"p\",{children:summary}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDF10 Translation (\",language,\"):\"]}),/*#__PURE__*/_jsx(\"p\",{children:translated})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","inputText","setInputText","summary","setSummary","translated","setTranslated","language","setLanguage","loading","setLoading","apiKey","process","env","REACT_APP_OPENAI_API_KEY","handleSummarize","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","concat","body","JSON","stringify","model","messages","role","content","data","json","result","choices","message","translateSummary","error","summaryText","_data$choices2","_data$choices2$","_data$choices2$$messa","translation","style","padding","maxWidth","margin","fontFamily","children","rows","cols","placeholder","value","onChange","e","target","marginTop","onClick","disabled"],"sources":["C:/Users/Paresh/documate/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [translated, setTranslated] = useState('');\n  const [language, setLanguage] = useState('Hindi');\n  const [loading, setLoading] = useState(false);\n\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY; // Uses .env file for security\n\n  const handleSummarize = async () => {\n    setLoading(true);\n    setSummary('');\n    setTranslated('');\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            { role: 'system', content: 'You are a helpful document summarizer.' },\n            { role: 'user', content: `Summarize this:\\n${inputText}` },\n          ],\n        }),\n      });\n\n      const data = await response.json();\n      const result = data.choices?.[0]?.message?.content || 'No summary returned.';\n      setSummary(result);\n      translateSummary(result);\n    } catch (error) {\n      setSummary('‚ùå Error during summarizing.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const translateSummary = async (summaryText) => {\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            { role: 'system', content: 'You are a translator.' },\n            { role: 'user', content: `Translate the following into ${language}:\\n${summaryText}` },\n          ],\n        }),\n      });\n\n      const data = await response.json();\n      const translation = data.choices?.[0]?.message?.content || 'No translation returned.';\n      setTranslated(translation);\n    } catch (error) {\n      setTranslated('‚ùå Error during translation.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '800px', margin: 'auto', fontFamily: 'sans-serif' }}>\n      <h2>üìÑ DocuMate - AI Summarizer & Translator</h2>\n\n      <textarea\n        rows=\"10\"\n        cols=\"80\"\n        placeholder=\"Paste your document here...\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n\n      <div style={{ marginTop: '15px' }}>\n        <label>üåç Translate summary to: </label>\n        <select value={language} onChange={(e) => setLanguage(e.target.value)}>\n          <option>Hindi</option>\n          <option>Marathi</option>\n          <option>Gujarati</option>\n          <option>Bengali</option>\n          <option>French</option>\n          <option>Spanish</option>\n        </select>\n      </div>\n\n      <button\n        onClick={handleSummarize}\n        disabled={loading || !inputText}\n        style={{ marginTop: '20px', padding: '10px 20px' }}\n      >\n        {loading ? '‚è≥ Processing...' : '‚ö° Summarize & Translate'}\n      </button>\n\n      <div style={{ marginTop: '30px' }}>\n        <h3>üìå Summary (English):</h3>\n        <p>{summary}</p>\n\n        <h3>üåê Translation ({language}):</h3>\n        <p>{translated}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}